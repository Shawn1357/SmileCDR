#
# Property Names below are composed of up to four parts separated by 
# periods ('.'), the first four of which may be in any order (and are expected
# to be in lower-case):
#   1. Property Name      (Required)
#   2. Application Name   (Optional)
#   3. Environment Name   (Optional)
#   4. Instance Name      (Optional)
#   5. Index Number       (Optional - must be a positive integer)
#
#
# The default is to base the configuration file off of the class of the
# Main entry point.  However, you can specify the configuration file to
# use through the command line parameter:
#
#    -c <cfgFileNm>   OR   --cfgFile <cfgFileNm>
#
# Using the command line, the system will search for the configuration file
# given the file name on the class path of the Java virtual machine.
#
#
# 1. Property Name
# ----------------
# The property name is the only required part of an entry in this properties
# file and it is the key by the application will search for values relating
# to that property.  The remaining three components are adornments that are
# optionally added to provide additional specificity across multiple
# applications and/or environments if that is required.
#
# For example: if the properties file contains:
#     sample-property-a = Some Value A
#     sample-property-b = Some Value B
#
# The application would request the values associated with 'sample-property-a'
# and would get back the value: "Some Value A"
#
#
# 2. Application Name
# -------------------
# This is an optional component which identifies properties that are specific
# to a particular application.  This is a convenience if the same property key
# might be used across multiple applications and have different values 
# depending on the application.
#
# The application name itself can be supplied through a command line parameter
#    -a <app-name>   or  --appName <app-name>
#
# but would default to a lower-case copy of the simple class name containing
# the Main entry point.  As an example, if you had the following java class
# file:
#
#         package  ca.ontariohealth.sampleapp;
#         ...
#         public class ASampleApp
#         {
#         public static void Main( String[] args )
#             {
#             ...
#             }
#         }
#
# In this case:
#     - The full class name is: ca.ontarionhealth.sampleApp.ASampleApp
#     - The simple class name is: ASampleApp
#     - The app name as it should appear in the properties: asampleapp
#
# As an example, if you have the following properties:
#
#      app-name-1.interesting.property = A Value for App 1
#      app-name-2.interesting.property = A Value for App 2
#      app-name-3.interesting.property = A Value for App 3
#
# And if an application named 'app-name-2' is running and requests the value
# for property 'interesting.property', it will be returned: 'A Value for App 2'
# and the values specific to applications: 'app-name-1' and 'app-name-3' will
# be ignored.
#
#
# 3. Environment Name
# -------------------
# This optional component of a property entry can be used to identify property
# settings for a property name that are environment specific.  For instance,
# you may have a setting for a property that applies in a development
# environment but have a different value for the same property in a test,
# stage or production environment.
#
# The environment name can only be supplied through the command line parameter
#    -e <env-name>   or   --envName <env-name>
#
# If the environment name is not provided, it is not used and any environment
# specific properties listed in this file will be ignored.
#
# For example, if your app is running in the 'tst' environment and you have
# the following properties listed:
#
#        dev.server.ip.address = 10.1.10.20
#        tst.server.ip-address = 10.2.20.30
#        stg.server.ip.address = 10.3.30.40
#        prd.server.ip-address = 10.4.40.50
#
# And the application requests the value for the property: 'server.ip.address',
# the value '10.2.20.30' will be returned and the other values will be
# ignored.
#
#
# 4. Application Instance Name
# ----------------------------
#
# If there are two instances of an application running at the same time to
# similar or slightly different jobs, each of these instances and can be given
# a name and thereby be given different configuration settings.
#
# The application instance name can only be supplied through the command line
# parameter:
#    -i <inst-name>   or   --instName <inst-name>
#
# If the instance name is not provided, it is not used and any instance
# specific properties listed in this file will be ignored.
#
# For example, if your dlqwatcher app is running in two instances: one to watch
# the KAFKA.DLQ topic, and a second to watch the KAFKA.PARKED topic, you may
# choose to give the first the instance name 'DLQ' and the second the instance
# name 'PARKED'.  The a look up for the Kafka Topic Name to watch could be
# requested with:
#
#        dlq.topic.name    = KAFKA.DLQ
#        parked.topic.name = KAFKA.PARKED
#
#
# 5. Index Number - Arrays of Values:
# -----------------------------------
# Properties may have any number of values associated with them and make for a
# group of values associated with a single property. To indicate multiple
# values for a single property, an integral index must be appended to the
# end of the property name. For instance:
#
#     property-name.1 = Value 1
#     property-name.2 = Value 2
#     property-name.3 = Value 3
#
#     another-prop    = Value 4
#
# When the application requests the values for 'property-name', it will be
# returned the list of values: ['Value 1', 'Value 2', 'Value 3'].  This list
# may be of any length.
#
# Technically, even when there is no integer suffix to the property, the
# application will still receive a list of values, but that list will
# have length 1.  So requesting 'another-prop' will result in a list of a
# single value: ['Value 4'].
#
#
# Property Lookup Search Mechanism
# --------------------------------
# When an application searches for a property, it searches by the Property Name
# only.  The application does not need to consider the application name or
# the environment name that is associated with.
#
# The tuple: Property Name, Environment Name, Instance Name and Property Name 
# may appear in any order in combination with the required Property Name
# component.  Each of the Property, Environment and Instance Names are
# individually optional and so may be supplied or not as part of a property
# specification within this file.
#
# The search order looks for entries in this properties file in the following
# order, moving from most specific to most widely applied property value.
# The search mechanism stops and returns all values with the located
# combination of Application, Environment, Instance and Property Names.
#
# For each combination, the application asks itself:
#    - Are all identified components available to the application (only the 
#      Property Name is Required), and
#    - Are there one or more properties which match the specified combination
#      of components (remember, any combination my have an optional integer
#      suffix which indicates an array of values for that combination).
#
# If the answer is no to either of those questions, the current combination
# is skipped and we move on to the next combination.  This process continues
# until a match is found or we run out of combinations to try.
#
#           Specific to a Particular Application, Instance and Environment
#           --------------------------------------------------------------
#
#           There are 24 possible permutations of the four elements when all
#           supplied in the configuration file:
#       1.  {App Name}.{Env Name}.{Instance}.{Property}
#       2.  {App Name}.{Env Name}.{Property}.{Instance}
#           ...
#      23.  {Property}.{Instance}.{App Name}.{Env Name}
#      24.  {Property}.{Instance}.{Env Name}.{App Name}
#
#           Combinations missing only Application (i.e. properties common to all Applications)
#           -------------------------------------
#      25.  {Instance}.{App Name}.{Property}
#      26.  {Instance}.{Property}.{App Name}
#           ...
#
#           Combinations missing only Environment (i.e. properties common to all Environments)
#           -------------------------------------
#
#           etc.
#
#           .
#           .
#           .

#           Properties specific only to an Application
#           ------------------------------------------
#
#           {Application}.{Property}
#           {Property}.{Application}
#
#
#           Properties specific only to an Environment
#           ------------------------------------------
#
#           {Environment}.{Property}
#           {Property}.{Environment}
#
#
#           Properties specific only to an Application Instance
#           ---------------------------------------------------
#
#           {Instance}.{Property}
#           {Property}.{Instance}
#
#
#           Generic Properties (common to all Applications, Environments and Instances)
#           ------------------
#
#           {Property}
#                 
#
#
# For example, suppose you have the following set of properties:
#
#      property.nm                 = Generic Value
#      property.nm.app-nm-1        = Generic across all envs for app 'app-nm-1'
#      property.nm.app-nm-2        = Generic across all envs for app 'app-nm-2'
#      property.nm.dev             = Generic across all apps for env 'dev'
#      property.nm.tst.1           = Generic across all apps for env 'tst' - Val 1
#      property.nm.tst.2           = Generic across all apps for env 'tst' - Val 2
#      property.nm.prd             = Generic across all apps for env 'prd'
#      property.nm.dev.app-nm-1    = Specific to app 'app-nm-1' in env 'dev'
#      property.nm.app-nm-2.dev    = Specific to app 'app-nm-2' in env 'dev'
#      app-nm-2.tst.property.nm.1  = Specific to app 'app-nm-2' in env 'tst' - Val 1
#      app-nm-2.tst.property.nm.2  = Specific to app 'app-nm-2' in env 'tst' - Val 2
#
#
#   The an application looking up 'property.nm' having:
#      Name: app-nm-1,  Env: dev  would get: ["Specific to app 'app-nm-1' in env 'dev'"]
#      Name: app-nm-3,  Env: tst  would get: ["Generic across all apps for env 'tst' - Val 1",
#                                             "Generic across all apps for env 'tst' - Val 2"]
#      Name: app-nm-4,  Env: prd  would get: ["Generic Value"]
#

#
# Environment definitions and machines they operate on.
# Environments are identified on the command line for the DLQWatcher and DLQWatcherControl
# applications by using the '--envName [Environment Name]' command line parameter.
#
# When specifying an environment name on the command line, it is case insensitive.
# Command line environment names are converted into lower case equivalents.
#
# When specifying an environment name within this properties file, environment name MUST BE LOWER CASE
#
# lcl-dev - Shawn Brant's local development Smile CDR environment.
#           Only used for offline development and exploration.
#
# cwm-dev - The CWM Development Instance.
#           Azure Portal Virtual Machine found at:
#           https://portal.azure.com/?feature.msaljs=false#@ontariohealth.ca/resource/subscriptions/12f4516f-a71d-4283-9bef-e59b881dea02/resourceGroups/rg-nonphi-cwmcdr-dev-001/providers/Microsoft.Compute/virtualMachines/onhcwmcdrdevwk001
#           User ID: windowsadmin
#
# mha-dev
#
# mha-tst
# mha-stg
# mha-prd - A set of environments found on the same Windows Jump Box but with
#           different configuration settings. Otherwise these environments use
#           the same set of underlying SmileCDR, SQLServer instance, and Kafka
#           Brokers.
#
#           Azure Portal Virtual Machine found at:
#           https://portal.azure.com/?feature.msaljs=false#@ontariohealth.ca/resource/subscriptions/12956774-2b87-4556-9248-afbcbe732a24/resourceGroups/rg-phi-mha-prd-001/providers/Microsoft.Compute/virtualMachines/onhmhaprdwk001
#           User ID: smiledlqwatcher
#
#          

# Properties identifying the application name version and build date
# for both the DLQWatcher and DLQWatcherControl apps.
dlqwatcher.application.name        = Kafka Dead-Letter-Queue Watcher
dlqwatcher.application.desc        = Issues alerts when the SmileCDR Dead Letter Queue receives entries.
dlqwatcher.version.num             = 1.0.5
dlqwatcher.build.date              = 2022-06-29

dlqwatchercontrol.application.name = DLQ Watcher Control App
dlqwatchercontrol.application.desc = App to control the execution of the DLQ Watcher
dlqwatchercontrol.version.num      = 1.0.5
dlqwatchercontrol.build.date       = 2022-06-29


# Generic Copyright holder properties.
copyright.holder                   = Accenture, Inc.
copyright.year.start               = 2022
copyright.year.end                 =


# The generic timestamp format as specified in the Java Class: DateTimeFormatter
timestamp.format                   = yyyy-MM-dd HH:mm:ss


#
# Set the amount of time the applicationshould pause on startup to
# give other services a chance to come alive.  This pause occurs after
# configuration, command line and logging services are brought up but
# before any actual processing occurs.
#
# This setting is overridden by the command line parameter --startup-delay
#
# Must be a non-negative number. If negative or 0, there is no delay.
# Positive numbers indicate the number of seconds to delay the application
# start.
#
#

dlqwatcher.startup.delay.secs = 0
dlqwatcher.mha-stg.startup.delay.secs = 15


#
# When the DLQ Watcher receives a START command (which launches the underlying
# threads), the following entries control whether or not the relevant threads 
# are started on not.  There is one entry for each of the underlying helper
# threads.
#
#

# Generic across all environments.
dlqwatcher.start.cmd.include.dlqpoll.thread        = true
dlqwatcher.start.cmd.include.parkpoll.thread       = true
dlqwatcher.start.cmd.include.parkdqlentries.thread = true
dlqwatcher.start.memory.monitor.thread             = true
        

# Specific to the lcl-dev environment
dlqwatcher.lcl-dev.start.cmd.include.dlqpoll.thread        = true
dlqwatcher.lcl-dev.start.cmd.include.parkpoll.thread       = true
dlqwatcher.lcl-dev.start.cmd.include.parkdlqentries.thread = true



#
# If the memory monitor thread is running, set the maximum
# number of most recent memory samples to keep and the interval
# to record them at.
#
# see: start.memory.monitor.thread
#
# 336 * 30 min represents one full week of memory samples.
#  48 * 30 min represents one full day of memory samples.
#

dlqwatcher.max.num.mem.samples       = 48
dlqwatcher.mem.poll.interval.minutes = 30



#
# When DLQ Watcher receives a STOP command or a QUIT command,
# all underlying threads are stopped.  This property indicates
# the maximum amount of time to wait for each fo the threads
# to shut down.  Keep in mind that each fo the threads may be
# in a poll wait state and mauy not wake up again to notice
# they should shut down for a period of time.  This property
# needs to be longer than that poll-wait time.
#
# See property:
#    consumer.poll.interval
# 
dlqwatcher.stop.cmd.max.wait.for.thread.millis         = 10000
dlqwatcher.lcl-dev.stop.cmd.max.wait.for.thread.millis = 5000



#
# The bootstrap.servers property lists all of the kafka bootstrap
# servers in the cluster associated with a particular environment.
# There may be multiple servers, each separated with a comma.
# Individual servers are identified by:
#    <IP Address>:<Port Num>
# OR <DNS Name>:<Port Num>
#
#
lcl-dev.bootstrap.servers      = smilecdr:9092
cwm-dev.bootstrap.servers      = wn0-kfk-no.cvh3wdymqooeddp0w52x0r3xse.ux.internal.cloudapp.net:9092,wn1-kfk-no.cvh3wdymqooeddp0w52x0r3xse.ux.internal.cloudapp.net:9092
mha-dev.bootstrap.servers      = 10.116.97.133:9092
mha-tst.bootstrap.servers      = wn0-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn1-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn2-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn3-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092
mha-stg.bootstrap.servers      = wn0-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn1-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn2-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn3-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092

# MHA Production specific
mha-prd.bootstrap.servers      = wn0-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn1-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn2-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092,wn3-kfk-ph.fifljgu54ccebl4fpooajz22rg.ux.internal.cloudapp.net:9092


#
# In topics that are allowed to purge elements, this property
# sets the maximum allowable time an individual element may reside
# in the topic.  The Kafka Topics will be set to this retention
# period on the start of the DLQ Watcher startup.
#
#

kafka.default.retention.hours  = 168

control.group.id               = SmileCDR.Control.Watcher
dlqwatcher.dlq.group.id        = SmileCDR.DLQ.Watcher
dlqwatcher.dlq.lister.group.id = SmileCDR.DLQ.Lister
dlqresend.resend.group.id      = SmileCDR.DLQ.Resend
consumer.poll.interval         = 500

kafka.park.watcher.group.id       = SmileCDR.PARK.Watcher
kafka.park.lister.group.id        = SmileCDR.PARK.Lister
kafka.dlq.topic.name              = KAFKA.DLQ
mha-dev.kafka.dlq.topic.name      = failure
mha-tst.kafka.dlq.topic.name      = failure
mha-stg.kafka.dlq.topic.name      = failure
mha-prd.kafka.dlq.topic.name      = failure
dlq.entry.retention.hours         = 168

lcl-dev.dlq.park.after.hours      = 24
lcl-dev.dlq.entry.retention.hours = 48
cwm-dev.dlq.park.after.hours      = 2
cwm-dev.dlq.entry.retention.hours = 48
mha-dev.dlq.park.after.hours      = 1
mha-dev.dlq.entry.retention.hours = 3
mha-tst.dlq.park.after.hours      = 15
mha-tst.dlq.entry.retention.hours = 168
mha-stg.dlq.park.after.hours      = 15
mha-stg.dlq.entry.retention.hours = 168
mha-prd.dlq.park.after.hours      = 150
mha-prd.dlq.entry.retention.hours = 168

kafka.park.topic.name                = KAFKA.PARK
parked.entry.retention.hours         = Forever
lcl-dev.parked.entry.retention.hours = 1
cwm-dev.parked.entry.retention.hours = 2

#
# The interval to check for the Dead Letter Queue for entries that may
# expire (in minutes).
#
dlq.frequency.mins.to.park.entries         = 120
lcl-dev.dlq.frequency.mins.to.park.entries = 2
cwm-dev.dlq.frequency.mins.to.park.entries = 2
mha-dev.dlq.frequency.mins.to.park.entries = 5
mha-tst.dlq.frequency.mins.to.park.entries = 2
mha-stg.dlq.frequency.mins.to.park.entries = 2
mha-prd.dlq.frequency.mins.to.park.entries = 5



# The lcl-dev instance of the DLQWatcher uses this parser (which extends
# ca.ontariohealth.smilecdr.support.kafka.KafkaTopicRecordParser) to read and
# make sense of records coming off of the SmileCDR Dead Letter Queue.
dlqwatcher.lcl-dev.dlq.parser.class.name  = ca.ontariohealth.smilecdr.support.commands.response.CWMDLQRecordEntry
dlqwatcher.lcl-dev.park.parser.class.name = ca.ontariohealth.smilecdr.support.commands.response.CWMParkRecordEntry
dlqwatcher.cwm-dev.dlq.parser.class.name  = ca.ontariohealth.smilecdr.support.commands.response.CWMDLQRecordEntry
dlqwatcher.cwm-dev.park.parser.class.name = ca.ontariohealth.smilecdr.support.commands.response.CWMParkRecordEntry
dlqwatcher.mha-dev.dlq.parser.class.name  = ca.ontariohealth.smilecdr.support.commands.response.MHADLQRecordEntry
dlqwatcher.mha-dev.park.parser.class.name = ca.ontariohealth.smilecdr.support.commands.response.MHAParkRecordEntry
dlqwatcher.mha-tst.dlq.parser.class.name  = ca.ontariohealth.smilecdr.support.commands.response.MHADLQRecordEntry
dlqwatcher.mha-tst.park.parser.class.name = ca.ontariohealth.smilecdr.support.commands.response.MHAParkRecordEntry
dlqwatcher.mha-stg.dlq.parser.class.name  = ca.ontariohealth.smilecdr.support.commands.response.MHADLQRecordEntry
dlqwatcher.mha-stg.park.parser.class.name = ca.ontariohealth.smilecdr.support.commands.response.MHAParkRecordEntry
dlqwatcher.mha-prd.dlq.parser.class.name  = ca.ontariohealth.smilecdr.support.commands.response.MHADLQRecordEntry
dlqwatcher.mha-prd.park.parser.class.name = ca.ontariohealth.smilecdr.support.commands.response.MHAParkRecordEntry


# Cause the DLQWatcher to automatically stop after this many milliseconds,
# Indicates to immediately stop.
# Comment out this property to run indefinitely (until the QUIT command
# is explicitly sent via the DLQWatcherControl App).
#dlqwatcher.lcl-dev.quit.after.millis      = 360000

dlqwatcher.lcl-dev.email.notifier.class   = ca.ontariohealth.smilecdr.support.email.BasicEMailNotifier
dlqwatcher.lcl-dev.email.server.smtp      = bdenim.ca
dlqwatcher.lcl-dev.email.server.smtp.port = 25
dlqwatcher.lcl-dev.email.ssl.connection   = false
dlqwatcher.lcl-dev.email.credentials.file = emailcredentials-lcl-dev.cred

dlqwatcher.cwm-dev.email.notifier.class   = ca.ontariohealth.smilecdr.support.email.BasicEMailNotifier
dlqwatcher.cwm-dev.email.server.smtp      = bdenim.ca
dlqwatcher.cwm-dev.email.server.smtp.port = 25
dlqwatcher.cwm-dev.email.ssl.connection   = false
dlqwatcher.cwm-dev.email.credentials.file = emailcredentials-lcl-dev.cred

dlqwatcher.mha-dev.email.notifier.class   = ca.ontariohealth.smilecdr.support.email.BasicEMailNotifier
dlqwatcher.mha-dev.email.server.smtp      = bdenim.ca
dlqwatcher.mha-dev.email.server.smtp.port = 25
dlqwatcher.mha-dev.email.ssl.connection   = false
dlqwatcher.mha-dev.email.credentials.file = emailcredentials-lcl-dev.cred

dlqwatcher.mha-tst.email.notifier.class   = ca.ontariohealth.smilecdr.support.email.AWSEMailNotifier
dlqwatcher.mha-tst.email.server.smtp      = email-smtp.ca-central-1.amazonaws.com
dlqwatcher.mha-tst.email.server.smtp.port = 587
dlqwatcher.mha-tst.email.ssl.connection   = true
dlqwatcher.mha-tst.email.credentials.file = emailcredentials-oh-aws.cred

dlqwatcher.mha-stg.email.notifier.class   = ca.ontariohealth.smilecdr.support.email.AWSEMailNotifier
dlqwatcher.mha-stg.email.server.smtp      = email-smtp.ca-central-1.amazonaws.com
dlqwatcher.mha-stg.email.server.smtp.port = 587
dlqwatcher.mha-stg.email.ssl.connection   = true
dlqwatcher.mha-stg.email.credentials.file = emailcredentials-oh-aws.cred

dlqwatcher.mha-prd.email.notifier.class   = ca.ontariohealth.smilecdr.support.email.AWSEMailNotifier
dlqwatcher.mha-prd.email.server.smtp      = email-smtp.ca-central-1.amazonaws.com
dlqwatcher.mha-prd.email.server.smtp.port = 587
dlqwatcher.mha-prd.email.ssl.connection   = true
dlqwatcher.mha-prd.email.credentials.file = emailcredentials-oh-aws.cred

# Default entries
dlqwatcher.email.notifier.class           = ca.ontariohealth.smilecdr.support.email.AWSEMailNotifier
dlqwatcher.email.server.smtp              = email-smtp.ca-central-1.amazonaws.com
dlqwatcher.email.server.smtp.port         = 587
dlqwatcher.email.ssl.connection           = true
dlqwatcher.email.credentials.file         = emailcredentials-oh-aws.cred


#
# Identify the EMail Setup Templates to use for various email activities.
# (Template names must be all lower-case)
#
#

dlqwatcher.email.newdlq.template.nm      = newdlqentries
dlqwatcher.email.dlqlist.template.nm     = dlqlisting
dlqwatcher.email.newpark.template.nm     = newparkentries
dlqwatcher.email.parklist.template.nm    = parklisting
dlqwatcher.email.testemail.template.nm   = testemail


#
# EMail Template for New Entries Detected on the Dead Letter Queue
#
#

dlqwatcher.lcl-dev.email.from.newdlqentries            = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
#dlqwatcher.lcl-dev.email.to.newdlqentries              = shawnabrant@gmail.com,gila.kats@ontariohealth.ca,sherman.quan@accenture.com
dlqwatcher.lcl-dev.email.to.newdlqentries              = shawnabrant@gmail.com
dlqwatcher.lcl-dev.email.cc.newdlqentries              =
dlqwatcher.lcl-dev.email.bcc.newdlqentries             =

dlqwatcher.mha-dev.email.from.newdlqentries            = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
dlqwatcher.mha-dev.email.to.newdlqentries              = shawn.brant@accenture.com
dlqwatcher.mha-dev.email.cc.newdlqentries              = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
#dlqwatcher.mha-dev.email.cc.newdlqentries              = 
dlqwatcher.mha-dev.email.bcc.newdlqentries             =

dlqwatcher.mha-tst.email.from.newdlqentries            = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-tst.email.to.newdlqentries              = shawn.brant@accenture.com
#dlqwatcher.mha-tst.email.cc.newdlqentries              = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-tst.email.cc.newdlqentries              = 
dlqwatcher.mha-tst.email.bcc.newdlqentries             =

dlqwatcher.mha-stg.email.from.newdlqentries            = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-stg.email.to.newdlqentries              = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-stg.email.cc.newdlqentries              = shawn.brant@accenture.com,sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-stg.email.bcc.newdlqentries             =

dlqwatcher.mha-prd.email.from.newdlqentries            = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-prd.email.to.newdlqentries              = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-prd.email.cc.newdlqentries              =
dlqwatcher.mha-prd.email.bcc.newdlqentries             =

dlqwatcher.email.subject.newdlqentries                 = New Dead Letter Queue Entries -- {{Now}}
dlqwatcher.email.body.incl.hashtag.lines.newdlqentries = false
dlqwatcher.email.body.file.nm.newdlqentries            = emailTemplateNewDLQEntries.txt



#
# EMail Template to List All Entries found on the Dead Letter Queue
#
#

dlqwatcher.lcl-dev.email.from.dlqlisting               = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
#dlqwatcher.lcl-dev.email.to.dlqlisting                 = shawnabrant@gmail.com,gila.kats@ontariohealth.ca,sherman.quan@accenture.com
dlqwatcher.lcl-dev.email.to.dlqlisting                 = shawnabrant@gmail.com
dlqwatcher.lcl-dev.email.cc.dlqlisting                 = 
dlqwatcher.lcl-dev.email.bcc.dlqlisting                =

dlqwatcher.mha-dev.email.from.dlqlisting               = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
dlqwatcher.mha-dev.email.to.dlqlisting                 = shawn.brant@accenture.com
dlqwatcher.mha-dev.email.cc.dlqlisting                 = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
#dlqwatcher.mha-dev.email.cc.dlqlisting                 = 
dlqwatcher.mha-dev.email.bcc.dlqlisting                =

dlqwatcher.mha-tst.email.from.dlqlisting               = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-tst.email.to.dlqlisting                 = shawn.brant@accenture.com
#dlqwatcher.mha-tst.email.cc.dlqlisting                 = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-tst.email.cc.dlqlisting                 = 
dlqwatcher.mha-tst.email.bcc.dlqlisting                =

dlqwatcher.mha-stg.email.from.dlqlisting               = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-stg.email.to.dlqlisting                 = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-stg.email.cc.dlqlisting                 = shawn.brant@accenture.com,sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-stg.email.bcc.dlqlisting                =

dlqwatcher.mha-prd.email.from.dlqlisting               = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-prd.email.to.dlqlisting                 = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-prd.email.cc.dlqlisting                 =
dlqwatcher.mha-prd.email.bcc.dlqlisting                =

dlqwatcher.email.subject.dlqlisting                    = Existing Dead Letter Queue Entries -- {{Now}}
dlqwatcher.email.body.incl.hashtag.lines.dlqlisting    = false
dlqwatcher.email.body.file.nm.dlqlisting               = emailTemplateAllDLQEntries.txt


#
# EMail Template to List New Entries on the Parking Lot Topic
#
#

dlqwatcher.lcl-dev.email.from.newparkentries            = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
#dlqwatcher.lcl-dev.email.to.newparkentries              = shawnabrant@gmail.com,gila.kats@ontariohealth.ca,sherman.quan@accenture.com
dlqwatcher.lcl-dev.email.to.newparkentries              = shawnabrant@gmail.com
dlqwatcher.lcl-dev.email.cc.newparkentries              = 
dlqwatcher.lcl-dev.email.bcc.newparkentries             =

dlqwatcher.mha-dev.email.from.newparkentries            = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
dlqwatcher.mha-dev.email.to.newparkentries              = shawn.brant@accenture.com
dlqwatcher.mha-dev.email.cc.newparkentries              = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
#dlqwatcher.mha-dev.email.cc.newparkentries              = 
dlqwatcher.mha-dev.email.bcc.newparkentries             =

dlqwatcher.mha-tst.email.from.newparkentries            = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-tst.email.to.newparkentries              = shawn.brant@accenture.com
#dlqwatcher.mha-tst.email.cc.newparkentries              = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-tst.email.cc.newparkentries              = 
dlqwatcher.mha-tst.email.bcc.newparkentries             =

dlqwatcher.mha-stg.email.from.newparkentries            = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-stg.email.to.newparkentries              = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-stg.email.cc.newparkentries              = shawn.brant@accenture.com,sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-stg.email.bcc.newparkentries             =

dlqwatcher.mha-prd.email.from.newparkentries            = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-prd.email.to.newparkentries              = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-prd.email.cc.newparkentries              =
dlqwatcher.mha-prd.email.bcc.newparkentries             =

dlqwatcher.email.subject.newparkentries                 = New Parking Lot Queue Entries -- {{Now}}
dlqwatcher.email.body.incl.hashtag.lines.newparkentries = false
dlqwatcher.email.body.file.nm.newparkentries            = emailTemplateNewParkEntries.txt


#
# EMail Template to List All Entries on the Parking Lot Topic
#
#

dlqwatcher.lcl-dev.email.from.parklisting               = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
#dlqwatcher.lcl-dev.email.to.parklisting                 = shawnabrant@gmail.com,gila.kats@ontariohealth.ca,sherman.quan@accenture.com
dlqwatcher.lcl-dev.email.to.parklisting                 = shawnabrant@gmail.com
dlqwatcher.lcl-dev.email.cc.parklisting                 = 
dlqwatcher.lcl-dev.email.bcc.parklisting                =

dlqwatcher.mha-dev.email.from.parklisting               = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
dlqwatcher.mha-dev.email.to.parklisting                 = shawn.brant@accenture.com
dlqwatcher.mha-dev.email.cc.parklisting                 = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
#dlqwatcher.mha-dev.email.cc.parklisting                 = 
dlqwatcher.mha-dev.email.bcc.parklisting                =

dlqwatcher.mha-tst.email.from.parklisting               = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-tst.email.to.parklisting                 = shawn.brant@accenture.com
#dlqwatcher.mha-tst.email.cc.parklisting                 = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-tst.email.cc.parklisting                 = 
dlqwatcher.mha-tst.email.bcc.parklisting                =

dlqwatcher.mha-stg.email.from.parklisting               = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-stg.email.to.parklisting                 = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-stg.email.cc.parklisting                 = shawn.brant@accenture.com,sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-stg.email.bcc.parklisting                =

dlqwatcher.mha-prd.email.from.parklisting               = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-prd.email.to.parklisting                 = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-prd.email.cc.parklisting                 =
dlqwatcher.mha-prd.email.bcc.parklisting                =

dlqwatcher.email.subject.parklisting                    = Existing Parking Lot Queue Entries -- {{Now}}
dlqwatcher.email.body.incl.hashtag.lines.parklisting    = false
dlqwatcher.email.body.file.nm.parklisting               = emailTemplateAllParkEntries.txt



#
# EMail Template for sending a Test EMail
#
#

dlqwatcher.lcl-dev.email.from.testemail                 = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
#dlqwatcher.lcl-dev.email.to.testemail                   = shawnabrant@gmail.com,gila.kats@ontariohealth.ca,sherman.quan@accenture.com
dlqwatcher.lcl-dev.email.to.testemail                   = shawnabrant@gmail.com
dlqwatcher.lcl-dev.email.cc.testemail                   = 
dlqwatcher.lcl-dev.email.bcc.testemail                  =

dlqwatcher.mha-dev.email.from.testemail                 = testaccount@bdenim.ca
# Multiple To, CC, and BCC email addresses are OK if separated by commas
dlqwatcher.mha-dev.email.to.testemail                   = shawn.brant@accenture.com
#dlqwatcher.mha-dev.email.cc.testemail                   = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-dev.email.cc.testemail                   = 
dlqwatcher.mha-dev.email.bcc.testemail                  =

dlqwatcher.mha-tst.email.from.testemail                 = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-tst.email.to.testemail                   = shawn.brant@accenture.com
#dlqwatcher.mha-tst.email.cc.testemail                   = sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-tst.email.cc.testemail                   = 
dlqwatcher.mha-tst.email.bcc.testemail                  =

dlqwatcher.mha-stg.email.from.testemail                 = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-stg.email.to.testemail                   = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-stg.email.cc.testemail                   = shawn.brant@accenture.com,sherman.quan@accenture.com,abhishek.dahiya@accenture.com,amit.c.pathak@avanade.com,shawnabrant@gmail.com,joee.garcia@accenture.com 
dlqwatcher.mha-stg.email.bcc.testemail                  =

dlqwatcher.mha-prd.email.from.testemail                 = MHA-Kafka-Notification@ontariohealth.ca
dlqwatcher.mha-prd.email.to.testemail                   = Gila.Kats@ontariohealth.ca,nicole.latchana@ontariohealth.ca,Greg.Clow@ontariohealth.ca,Daniel.Issaharoff@ontariohealth.ca,Jitender.Mukar@ontariohealth.ca,wadih.deaibes@ontariohealth.ca,Ralph.Chan@ontariohealth.ca
dlqwatcher.mha-prd.email.cc.testemail                   =
dlqwatcher.mha-prd.email.bcc.testemail                  =

dlqwatcher.email.subject.testemail                      = DLQWatcher EMail Test -- {{Now}}
dlqwatcher.email.body.incl.hashtag.lines.testemail      = false
dlqwatcher.email.body.file.nm.testemail                 = emailTemplateTestEMail.txt



# These two properties should identify the same topic:
# The first identifies the topic to which the control app sends commands.
# The second identifies the topic the watcher app polls to receive commands.

dlqwatchercontrol.topic.name.command    = DLQWatcherControlTopic
dlqwatcher.topic.name.command           = DLQWatcherControlTopic

dlqwatchercontrol.topic.name.response   = DLQWatcherResponseTopic
dlqwatcher.topic.name.response          = DLQWatcherResponseTopic

# The amount of time to wait before starting to listen for a response from
# the DLQWatcher application.  Applies only to the DLQ Watcher Control app.
# If not specified, the default is 0 (no wait).
dlqwatchercontrol.pause.before.response = 0


# In a synchronous exchange of data, such as DLQWatcher Control to DLQ Watcher,
# this is the maximum time to wait for a response to appear.  Internal
# hard coded default is 30 seconds
response.wait.seconds = 15
dlqwatchercontrol.response.wait.seconds = 20


dlqresend.lcl-dev.retrigger.url  = http://smilecdr:8000/Subscription/{{SubscriptionID}}/$trigger-subscription 
dlqresend.retrigger.body         = {"resourceType": "Parameters", "parameter": [{"name": "resourceId", "valueUri": "{{ResourceType}}/{{ResourceID}}"}]}



# Severity must be one of: DEBUG, INFO, WARN, ERROR, FATAL
processing.severity.dlqw-0000 = INFO
processing.format.dlqw-0000   = Success

# First argument is Thread Name: DLQ Poller, etc.
processing.severity.dlqw-0001 = INFO
processing.format.dlqw-0001   = %s Thread is already alive: nothing to do.

# First argument is Thread Name: DLQ Poller, etc.
processing.severity.dlqw-0002 = ERROR
processing.format.dlqw-0002   = "%s Thread did not start."

# First argument is Thread Name: DLQ Poller, etc.
processing.severity.dlqw-0003 = INFO
processing.format.dlqw-0003   = %s Thread is running.

# First argument is Thread Name: DLQ Poller, etc.
processing.severity.dlqw-0004 = INFO
processing.format.dlqw-0004   = %s Thread is not running: nothing to do.

# First argument is Thread Name: DLQ Poller, etc.
processing.severity.dlqw-0005 = WARN
processing.format.dlqw-0005   = %s Thread is running but Configuration indicates it should not be.

# First argument is ThreadName: DLQ Poller, etc.
# Second argument is Max Wait in Milliseconds.
processing.severity.dlqw-0006 = WARN
processing.format.dlqw-0006   = %s Thread is still alive after %s milliseconds. Killing it.

# First argument is EMail Server DNS Name
processing.severity.dlqw-0007 = ERROR
processing.format.dlqw-0007   = Unable to authenticate with SMTP EMail Server at: %s

# First argument is meant to be an arbitrary string.
processing.severity.dlqw-9999 = INFO
processing.format.dlqw-9999   = Additional Info: %s